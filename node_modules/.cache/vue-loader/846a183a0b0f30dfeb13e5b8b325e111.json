{"remainingRequest":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\src\\view\\login\\login.vue?vue&type=style&index=0&id=77c14c32&scoped=true&lang=css&","dependencies":[{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\src\\view\\login\\login.vue","mtime":1576636475861},{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Desktop\\music\\vue\\vue1\\语桥\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLmRlbW8tcnVsZUZvcm0gew0KICB3aWR0aDogNjAwcHg7DQogIG1hcmdpbjogMjAwcHggYXV0bzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0K"},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/view/login","sourcesContent":["// From表单的使用\r\n// From里ref的作用\r\n// 规则\r\n// 二次登录的验证\r\n// 判断是否登录，看cookies或者storage里是否有缓存，但作为重要的网页登录界面，需要在关闭页面时，账号密码丢失\r\n// sessionStorage.setItem(\"key\", \"value\") 用途：将value存储到key字段\r\n// 在钩子函数中可以拦截所有的路由\r\n<template>\r\n  <div class=\"box\">\r\n    <el-form\r\n      :model=\"ruleForm\"\r\n      status-icon\r\n      :rules=\"rules\"\r\n      ref=\"loginForm\"\r\n      label-width=\"100px\"\r\n      class=\"demo-ruleForm\"\r\n    >\r\n      <h1 style=\"margin:20px 0;width: 600px;text-align:center\">后台管理系统登录</h1>\r\n      <!-- ref属性是用来标记的，可以在mounted周期里通过this.$refs把带有ref属性的获取到 -->\r\n      <el-form-item label=\"账号\" prop=\"nickname\">\r\n        <el-input type=\"text\" v-model=\"ruleForm.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\" prop=\"pwd\">\r\n        <el-input type=\"password\" v-model=\"ruleForm.pwd\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"login\" style=\"letter-spacing:20px;width:300px\">登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ruleForm: {\r\n        nickname: \"\",\r\n        pwd: \"\"\r\n      },\r\n      rules: {\r\n        nickname: [{ required: true, message: \"请输入名称\", trigger: \"blur\" }],\r\n        pwd: [{ required: true, message: \"请输入名称\", trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    login() {\r\n      //   console.log(this.$refs);\r\n      // 找到当前登录的表单loginFrom  validate再次验证输入内容是否合法\r\n      this.$refs.loginForm.validate(valid => {\r\n        if (valid) {\r\n          this.$message({\r\n            message: \"登陆成功！\",\r\n            type: \"success\",\r\n            duration:1500,\r\n            onClose:()=>{\r\n                // 当登录成功后，把当前用户信息寄存在sessionStorage中，用来后续判断是否登录\r\n                sessionStorage.setItem('loginuser',this.ruleForm.nickname)\r\n                this.$router.push('/')\r\n            }\r\n          });\r\n        } else {\r\n          this.$message.error(\"输入有误！\");\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.demo-ruleForm {\r\n  width: 600px;\r\n  margin: 200px auto;\r\n  text-align: center;\r\n}\r\n</style>"]}]}